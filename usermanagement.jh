/**
 * Generated by JHipster IDE plugin
 */
 
 /**
 * Entity UserProfile
 * All the user related information apart from password
 */
entity UserProfile {
	email String required unique
    uuid String required
	fullName String
	title String
}

entity UserState {
	state String required
    value String
    date LocalDate
}

entity SystemConfiguration {
	key String required
    value String required
    
}
entity ConfigurationApplicability {
//the name can be client, server, both etc..
	name String required
}
/** 
 * Entity CompanyInfo
 * It represents companies representing suppliers as well as procurement user company
 */
entity Company {
	companyName String required
}
/** 
 * Entity CompanyDomain
 * 
 */

entity CompanyDomain {
	domain String required
}

/** 
 * Entity Invitation
 */
entity Invitation {
	/**
	 * Key is UUID which can be used to fetch details about all the child SupplierDataRequests
	 * 
	 * It could be sent in the email and is used to populate the request details for the company user
	 */
	key String required
    //For supplier PIN is not mandatory
	pin Long
	invitationDate LocalDate required
    /**
    * validTill represents the date till when this invitation is vaild. If someone tries to onboard after this date, registration will be rejected.
    */
	validTill LocalDate
    /**
    * If we need to deactivate / invalidate any invitation, set its isInvalid attribute to true
    */
    isInvalid Boolean
}

/** 
 * Entity 
 * 
 */

entity SupplierInvitationDetails {
    supplierDataProviderKey String required
    dataProvider SupplierDataProvider required
}

enum SupplierDataProvider {
	DNB, DVB
}

relationship OneToOne {
	Invitation to UserProfile,
    Invitation to Company,
    Invitation to SupplierInvitationDetails
}

relationship OneToMany {
    Company to CompanyDomain,
    UserProfile to UserState,
    SystemConfiguration to ConfigurationApplicability
}

relationship ManyToOne{
	UserProfile to Company
}


// Set pagination options
//paginate JobHistory, Employee with infinite-scroll
//paginate Job with pagination
dto * with mapstruct
// Set service options to all except few
service all with serviceImpl
// Set an angular suffix
angularSuffix * with livex

